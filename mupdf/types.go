// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Tue, 10 Oct 2017 18:52:59 MSK.
// By https://git.io/c-for-go. DO NOT EDIT.

package mupdf

/*
#include "mupdf/pdf.h"
#include "mupdf/fitz.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// Off type as declared in fitz/system.h:222
type Off int32

// AllocContext as declared in fitz/context.h:12
type AllocContext struct {
	User           unsafe.Pointer
	Malloc         *func(arg0 unsafe.Pointer, arg1 uint) unsafe.Pointer
	Realloc        *func(arg0 unsafe.Pointer, arg1 unsafe.Pointer, arg2 uint) unsafe.Pointer
	Free           *func(arg0 unsafe.Pointer, arg1 unsafe.Pointer)
	ref846108bc    *C.fz_alloc_context
	allocs846108bc interface{}
}

// ErrorContext as declared in fitz/context.h:13
type ErrorContext struct {
	Top            []ErrorStackSlot
	Stack          [256]ErrorStackSlot
	Errcode        int32
	Message        [256]byte
	refe6cae537    *C.fz_error_context
	allocse6cae537 interface{}
}

// ErrorStackSlot as declared in fitz/context.h:14
type ErrorStackSlot struct {
	Code           int32
	Buffer         [37]int32
	refd443b19a    *C.fz_error_stack_slot
	allocsd443b19a interface{}
}

// IdContext as declared in fitz/context.h:15
type IdContext C.fz_id_context

// WarnContext as declared in fitz/context.h:16
type WarnContext struct {
	Message        [256]byte
	Count          int32
	reff5178c16    *C.fz_warn_context
	allocsf5178c16 interface{}
}

// FontContext as declared in fitz/context.h:17
type FontContext C.fz_font_context

// ColorspaceContext as declared in fitz/context.h:18
type ColorspaceContext C.fz_colorspace_context

// CmmEngine as declared in fitz/context.h:19
type CmmEngine struct {
	NewInstance       CmmNewInstanceFn
	DropInstance      CmmDropInstanceFn
	TransformPixmap   CmmTransformPixmapFn
	TransformColor    CmmTransformColorFn
	InitLink          CmmInitLinkFn
	FinLink           CmmFinLinkFn
	InitProfile       CmmInitProfileFn
	FinProfile        CmmFinProfileFn
	AvoidWhiteFixFlag int32
	refd4bc4dec       *C.fz_cmm_engine
	allocsd4bc4dec    interface{}
}

// CmmInstance as declared in fitz/context.h:20
type CmmInstance C.fz_cmm_instance

// AaContext as declared in fitz/context.h:21
type AaContext C.fz_aa_context

// StyleContext as declared in fitz/context.h:22
type StyleContext C.fz_style_context

// LocksContext as declared in fitz/context.h:23
type LocksContext struct {
	User           unsafe.Pointer
	Lock           *func(user unsafe.Pointer, lock int32)
	Unlock         *func(user unsafe.Pointer, lock int32)
	ref8200acff    *C.fz_locks_context
	allocs8200acff interface{}
}

// TuningContext as declared in fitz/context.h:24
type TuningContext C.fz_tuning_context

// Store as declared in fitz/context.h:25
type Store C.fz_store

// GlyphCache as declared in fitz/context.h:26
type GlyphCache C.fz_glyph_cache

// DocumentHandlerContext as declared in fitz/context.h:27
type DocumentHandlerContext C.fz_document_handler_context

// OutputContext as declared in fitz/context.h:28
type OutputContext C.fz_output_context

// Context as declared in fitz/context.h:29
type Context struct {
	User           unsafe.Pointer
	Alloc          []AllocContext
	Locks          []LocksContext
	Id             []IdContext
	Error          []ErrorContext
	Warn           []WarnContext
	Font           []FontContext
	Colorspace     []ColorspaceContext
	CmmInstance    []CmmInstance
	Aa             []AaContext
	Style          []StyleContext
	Store          []Store
	GlyphCache     []GlyphCache
	Tuning         []TuningContext
	Handler        []DocumentHandlerContext
	Output         []OutputContext
	refa9c9ee60    *C.fz_context
	allocsa9c9ee60 interface{}
}

// TuneImageDecodeFn type as declared in fitz/context.h:237
type TuneImageDecodeFn func(arg unsafe.Pointer, w int32, h int32, l2factor int32, subarea []Irect)

// TuneImageScaleFn type as declared in fitz/context.h:253
type TuneImageScaleFn func(arg unsafe.Pointer, dstW int32, dstH int32, srcW int32, srcH int32) int32

// Point as declared in fitz/geometry.h:123
type Point struct {
	X              float32
	Y              float32
	refb7e1472b    *C.fz_point
	allocsb7e1472b interface{}
}

// Rect as declared in fitz/geometry.h:147
type Rect struct {
	X0             float32
	Y0             float32
	X1             float32
	Y1             float32
	reff3623c81    *C.fz_rect
	allocsf3623c81 interface{}
}

// Irect as declared in fitz/geometry.h:175
type Irect struct {
	X0             int32
	Y0             int32
	X1             int32
	Y1             int32
	refc4d6bab3    *C.fz_irect
	allocsc4d6bab3 interface{}
}

// Matrix as declared in fitz/geometry.h:262
type Matrix struct {
	A              float32
	B              float32
	C              float32
	D              float32
	E              float32
	F              float32
	ref688c18ea    *C.fz_matrix
	allocs688c18ea interface{}
}

// Md5 as declared in fitz/crypt.h:14
type Md5 struct {
	State          [4]uint32
	Count          [2]uint32
	Buffer         [64]byte
	ref584e988d    *C.fz_md5
	allocs584e988d interface{}
}

// Sha256 as declared in fitz/crypt.h:33
type Sha256 struct {
	State          [8]uint32
	Count          [2]uint32
	refcc774dd2    *C.fz_sha256
	allocscc774dd2 interface{}
}

// Sha512 as declared in fitz/crypt.h:55
type Sha512 struct {
	State          [8]uint64
	Count          [2]uint32
	refaa395a4a    *C.fz_sha512
	allocsaa395a4a interface{}
}

// Sha384 as declared in fitz/crypt.h:77
type Sha384 struct {
	State          [8]uint64
	Count          [2]uint32
	ref96153884    *C.fz_sha384
	allocs96153884 interface{}
}

// Arc4 as declared in fitz/crypt.h:85
type Arc4 struct {
	X              uint32
	Y              uint32
	State          [256]byte
	refde7b3095    *C.fz_arc4
	allocsde7b3095 interface{}
}

// Aes as declared in fitz/crypt.h:103
type Aes struct {
	Nr             int32
	Rk             []uint
	Buf            [68]uint
	refd7f0b40d    *C.fz_aes
	allocsd7f0b40d interface{}
}

// HashTable as declared in fitz/hash.h:20
type HashTable C.fz_hash_table

// HashTableDropFn type as declared in fitz/hash.h:21
type HashTableDropFn func(ctx []Context, val unsafe.Pointer)

// HashTableForEachFn type as declared in fitz/hash.h:22
type HashTableForEachFn func(ctx []Context, state unsafe.Pointer, key unsafe.Pointer, keylen int32, val unsafe.Pointer)

// Output as declared in fitz/output.h:13
type Output struct {
	State          unsafe.Pointer
	Write          OutputWriteFn
	Seek           OutputSeekFn
	Tell           OutputTellFn
	Close          OutputCloseFn
	ref5c614dbb    *C.fz_output
	allocs5c614dbb interface{}
}

// OutputWriteFn type as declared in fitz/output.h:26
type OutputWriteFn func(ctx []Context, state unsafe.Pointer, data unsafe.Pointer, n uint)

// OutputSeekFn type as declared in fitz/output.h:37
type OutputSeekFn func(ctx []Context, state unsafe.Pointer, offset Off, whence int32)

// OutputTellFn type as declared in fitz/output.h:48
type OutputTellFn func(ctx []Context, state unsafe.Pointer) Off

// OutputCloseFn type as declared in fitz/output.h:58
type OutputCloseFn func(ctx []Context, state unsafe.Pointer)

// Buffer as declared in fitz/buffer.h:13
type Buffer C.fz_buffer

// Pool as declared in fitz/pool.h:7
type Pool C.fz_pool

// Tree as declared in fitz/tree.h:11
type Tree C.fz_tree

// BidiFragmentFn type as declared in fitz/bidi.h:53
type BidiFragmentFn func(fragment []uint32, fragmentlen uint, bidilevel int32, script int32, arg unsafe.Pointer)

// Xml as declared in fitz/xml.h:11
type Xml C.fz_xml

// Stream as declared in fitz/stream.h:22
type Stream struct {
	Refs           int32
	Error          int32
	Eof            int32
	Pos            Off
	Avail          int32
	Bits           int32
	Rp             []byte
	Wp             []byte
	State          unsafe.Pointer
	Next           StreamNextFn
	Close          StreamCloseFn
	Seek           StreamSeekFn
	Meta           StreamMetaFn
	ref6056e739    *C.fz_stream
	allocs6056e739 interface{}
}

// StreamNextFn type as declared in fitz/stream.h:239
type StreamNextFn func(ctx []Context, stm []Stream, max uint) int32

// StreamCloseFn type as declared in fitz/stream.h:249
type StreamCloseFn func(ctx []Context, state unsafe.Pointer)

// StreamSeekFn type as declared in fitz/stream.h:259
type StreamSeekFn func(ctx []Context, stm []Stream, offset Off, whence int32)

// StreamMetaFn type as declared in fitz/stream.h:269
type StreamMetaFn func(ctx []Context, stm []Stream, key int32, size int32, ptr unsafe.Pointer) int32

// CompressionParams as declared in fitz/compressed-buffer.h:9
type CompressionParams struct {
	Type           int32
	ref737eea0e    *C.fz_compression_params
	allocs737eea0e interface{}
}

// CompressedBuffer as declared in fitz/compressed-buffer.h:11
type CompressedBuffer struct {
	Params        CompressionParams
	Buffer        []Buffer
	ref744dc91    *C.fz_compressed_buffer
	allocs744dc91 interface{}
}

// Jbig2Globals as declared in fitz/filter.h:10
type Jbig2Globals C.fz_jbig2_globals

// Storable as declared in fitz/store.h:29
type Storable struct {
	Refs           int32
	Drop           StoreDropFn
	refe377245e    *C.fz_storable
	allocse377245e interface{}
}

// KeyStorable as declared in fitz/store.h:30
type KeyStorable struct {
	Storable      Storable
	StoreKeyRefs  int16
	ref25099da    *C.fz_key_storable
	allocs25099da interface{}
}

// StoreDropFn type as declared in fitz/store.h:32
type StoreDropFn func(arg0 []Context, arg1 []Storable)

// StoreHash as declared in fitz/store.h:151
type StoreHash struct {
	Drop           StoreDropFn
	ref54d2a776    *C.fz_store_hash
	allocs54d2a776 interface{}
}

// StoreType as declared in fitz/store.h:161
type StoreType struct {
	MakeHashKey   *func(ctx []Context, hash []StoreHash, key unsafe.Pointer) int32
	KeepKey       *func(ctx []Context, key unsafe.Pointer) unsafe.Pointer
	DropKey       *func(ctx []Context, key unsafe.Pointer)
	CmpKey        *func(ctx []Context, a unsafe.Pointer, b unsafe.Pointer) int32
	FormatKey     *func(ctx []Context, buf []byte, size int32, key unsafe.Pointer)
	NeedsReap     *func(ctx []Context, key unsafe.Pointer) int32
	ref9b492e7    *C.fz_store_type
	allocs9b492e7 interface{}
}

// StoreFilterFn type as declared in fitz/store.h:260
type StoreFilterFn func(ctx []Context, arg unsafe.Pointer, key unsafe.Pointer) int32

// Archive as declared in fitz/archive.h:9
type Archive struct {
	File           []Stream
	Format         string
	DropArchive    *func(ctx []Context, arch []Archive)
	CountEntries   *func(ctx []Context, arch []Archive) int32
	ListEntry      *func(ctx []Context, arch []Archive, idx int32) string
	HasEntry       *func(ctx []Context, arch []Archive, name string) int32
	ReadEntry      Buffer
	OpenEntry      Stream
	ref9e683682    *C.fz_archive
	allocs9e683682 interface{}
}

// ZipWriter as declared in fitz/archive.h:181
type ZipWriter C.fz_zip_writer

// ColorParams as declared in fitz/colorspace.h:19
type ColorParams struct {
	Ri             byte
	Bp             byte
	Op             byte
	Opm            byte
	ref70b0cf02    *C.fz_color_params
	allocs70b0cf02 interface{}
}

// Colorspace as declared in fitz/colorspace.h:40
type Colorspace C.fz_colorspace

// Iccprofile as declared in fitz/colorspace.h:47
type Iccprofile C.fz_iccprofile

// Icclink as declared in fitz/colorspace.h:52
type Icclink C.fz_icclink

// DefaultColorspaces as declared in fitz/colorspace.h:57
type DefaultColorspaces C.fz_default_colorspaces

// ColorspaceConvertFn type as declared in fitz/colorspace.h:103
type ColorspaceConvertFn func(ctx []Context, cs []Colorspace, src []float32, dst []float32)

// ColorspaceDestructFn type as declared in fitz/colorspace.h:105
type ColorspaceDestructFn func(ctx []Context, cs []Colorspace)

// ColorspaceBaseFn type as declared in fitz/colorspace.h:107
type ColorspaceBaseFn func(cs []Colorspace) *Colorspace

// ColorspaceClampFn type as declared in fitz/colorspace.h:109
type ColorspaceClampFn func(cs []Colorspace, src []float32, dst []float32)

// ColorConverter as declared in fitz/colorspace.h:130
type ColorConverter struct {
	Convert        *func(arg0 []Context, arg1 []ColorConverter, arg2 []float32, arg3 []float32)
	Ds             []Colorspace
	Ss             []Colorspace
	Is             []Colorspace
	Opaque         unsafe.Pointer
	Link           unsafe.Pointer
	N              int32
	ref3819bec4    *C.fz_color_converter
	allocs3819bec4 interface{}
}

// CalColorspace as declared in fitz/colorspace.h:153
type CalColorspace struct {
	Wp             [3]float32
	Bp             [3]float32
	Gamma          [3]float32
	Matrix         [9]float32
	N              int32
	Profile        []Iccprofile
	refe3377c70    *C.fz_cal_colorspace
	allocse3377c70 interface{}
}

// Pixmap as declared in fitz/pixmap.h:17
type Pixmap struct {
	Storable       Storable
	X              int32
	Y              int32
	W              int32
	H              int32
	N              byte
	S              byte
	Alpha          byte
	Flags          byte
	Stride         int32
	Seps           []Separations
	Xres           int32
	Yres           int32
	Colorspace     []Colorspace
	Samples        []byte
	ref7c1a1ba1    *C.fz_pixmap
	allocs7c1a1ba1 interface{}
}

// ScaleCache as declared in fitz/pixmap.h:370
type ScaleCache C.fz_scale_cache

// PixmapConverter type as declared in fitz/pixmap.h:388
type PixmapConverter func(ctx []Context, dp []Pixmap, sp []Pixmap, prf []Colorspace, defaultCs []DefaultColorspaces, colorParams []ColorParams, copySpots int32)

// Separations as declared in fitz/separation.h:20
type Separations C.fz_separations

// Glyph as declared in fitz/glyph.h:14
type Glyph struct {
	Storable       Storable
	X              int32
	Y              int32
	W              int32
	H              int32
	Pixmap         []Pixmap
	Size           uint
	Data           [1]byte
	refabf263b7    *C.fz_glyph
	allocsabf263b7 interface{}
}

// Bitmap as declared in fitz/bitmap.h:13
type Bitmap struct {
	Refs           int32
	W              int32
	H              int32
	Stride         int32
	N              int32
	Xres           int32
	Yres           int32
	Samples        []byte
	ref78d20789    *C.fz_bitmap
	allocs78d20789 interface{}
}

// Halftone as declared in fitz/bitmap.h:39
type Halftone C.fz_halftone

// Image as declared in fitz/image.h:20
type Image struct {
	KeyStorable    KeyStorable
	W              int32
	H              int32
	N              byte
	Bpc            byte
	Imagemask      uint32
	Interpolate    uint32
	UseColorkey    uint32
	UseDecode      uint32
	InvertCmykJpeg uint32
	Decoded        uint32
	Scalable       uint32
	Mask           []Image
	Xres           int32
	Yres           int32
	Colorspace     []Colorspace
	DropImage      DropImageFn
	GetPixmap      ImageGetPixmapFn
	GetSize        ImageGetSizeFn
	Colorkey       [64]int32
	Decode         [64]float32
	refc579b050    *C.fz_image
	allocsc579b050 interface{}
}

// CompressedImage as declared in fitz/image.h:21
type CompressedImage C.fz_compressed_image

// PixmapImage as declared in fitz/image.h:22
type PixmapImage C.fz_pixmap_image

// DropImageFn type as declared in fitz/image.h:72
type DropImageFn func(ctx []Context, image []Image)

// ImageGetPixmapFn type as declared in fitz/image.h:97
type ImageGetPixmapFn func(ctx []Context, im []Image, subarea []Irect, w int32, h int32, l2factor []int32) *Pixmap

// ImageGetSizeFn type as declared in fitz/image.h:105
type ImageGetSizeFn func(arg0 []Context, arg1 []Image) uint

// Shade as declared in fitz/shade.h:80
type Shade struct {
	Storable       Storable
	Bbox           Rect
	Colorspace     []Colorspace
	Matrix         Matrix
	UseBackground  int32
	Background     [32]float32
	UseFunction    int32
	Function       [256][33]float32
	Type           int32
	Buffer         []CompressedBuffer
	reff3da9c82    *C.fz_shade
	allocsf3da9c82 interface{}
}

// Vertex as declared in fitz/shade.h:141
type Vertex struct {
	P              Point
	C              [32]float32
	ref794e2010    *C.fz_vertex
	allocs794e2010 interface{}
}

// ShadePrepareFn type as declared in fitz/shade.h:159
type ShadePrepareFn func(ctx []Context, arg unsafe.Pointer, v []Vertex, c []float32)

// ShadeProcessFn type as declared in fitz/shade.h:171
type ShadeProcessFn func(ctx []Context, arg unsafe.Pointer, av []Vertex, bv []Vertex, cv []Vertex)

// Font as declared in fitz/font.h:15
type Font C.fz_font

// FontFlags as declared in fitz/font.h:78
type FontFlags struct {
	IsMono         uint32
	IsSerif        uint32
	IsBold         uint32
	IsItalic       uint32
	FtSubstitute   uint32
	FtStretch      uint32
	FakeBold       uint32
	FakeItalic     uint32
	ForceHinting   uint32
	HasOpentype    uint32
	InvalidBbox    uint32
	refe29ef004    *C.fz_font_flags_t
	allocse29ef004 interface{}
}

// ShaperData as declared in fitz/font.h:104
type ShaperData struct {
	ShaperHandle  unsafe.Pointer
	Destroy       *func(ctx []Context, arg1 unsafe.Pointer)
	ref5fc0bb0    *C.fz_shaper_data_t
	allocs5fc0bb0 interface{}
}

// LoadSystemFontFn type as declared in fitz/font.h:167
type LoadSystemFontFn func(ctx []Context, name string, bold int32, italic int32, needsExactMetrics int32) *Font

// LoadSystemCjkFontFn type as declared in fitz/font.h:178
type LoadSystemCjkFontFn func(ctx []Context, name string, ros int32, serif int32) *Font

// LoadSystemFallbackFontFn type as declared in fitz/font.h:190
type LoadSystemFallbackFontFn func(ctx []Context, script int32, language int32, serif int32, bold int32, italic int32) *Font

// Path as declared in fitz/path.h:17
type Path C.fz_path

// StrokeState as declared in fitz/path.h:18
type StrokeState struct {
	Refs          int32
	StartCap      Linecap
	DashCap       Linecap
	EndCap        Linecap
	Linejoin      Linejoin
	Linewidth     float32
	Miterlimit    float32
	DashPhase     float32
	DashLen       int32
	DashList      [32]float32
	ref19a30a2    *C.fz_stroke_state
	allocs19a30a2 interface{}
}

// PathWalker as declared in fitz/path.h:60
type PathWalker struct {
	Moveto         *func(ctx []Context, arg unsafe.Pointer, x float32, y float32)
	Lineto         *func(ctx []Context, arg unsafe.Pointer, x float32, y float32)
	Curveto        *func(ctx []Context, arg unsafe.Pointer, x1 float32, y1 float32, x2 float32, y2 float32, x3 float32, y3 float32)
	Closepath      *func(ctx []Context, arg unsafe.Pointer)
	Quadto         *func(ctx []Context, arg unsafe.Pointer, x1 float32, y1 float32, x2 float32, y2 float32)
	Curvetov       *func(ctx []Context, arg unsafe.Pointer, x2 float32, y2 float32, x3 float32, y3 float32)
	Curvetoy       *func(ctx []Context, arg unsafe.Pointer, x1 float32, y1 float32, x3 float32, y3 float32)
	Rectto         *func(ctx []Context, arg unsafe.Pointer, x1 float32, y1 float32, x2 float32, y2 float32)
	reff1bd6fbf    *C.fz_path_walker
	allocsf1bd6fbf interface{}
}

// Text as declared in fitz/text.h:22
type Text struct {
	Refs           int32
	Head           []TextSpan
	Tail           []TextSpan
	ref7f3fa8c7    *C.fz_text
	allocs7f3fa8c7 interface{}
}

// TextSpan as declared in fitz/text.h:23
type TextSpan struct {
	Font           []Font
	Trm            Matrix
	Wmode          uint32
	BidiLevel      uint32
	MarkupDir      uint32
	Language       uint32
	Len            int32
	Cap            int32
	Items          []TextItem
	Next           []TextSpan
	refd38c1c29    *C.fz_text_span
	allocsd38c1c29 interface{}
}

// TextItem as declared in fitz/text.h:24
type TextItem struct {
	X              float32
	Y              float32
	Gid            int32
	Ucs            int32
	ref164497b0    *C.fz_text_item
	allocs164497b0 interface{}
}

// CmmNewInstanceFn type as declared in fitz/color-management.h:24
type CmmNewInstanceFn func(ctx []Context) *CmmInstance

// CmmDropInstanceFn type as declared in fitz/color-management.h:31
type CmmDropInstanceFn func(instance []CmmInstance)

// CmmTransformPixmapFn type as declared in fitz/color-management.h:37
type CmmTransformPixmapFn func(ctx []CmmInstance, link []Icclink, dst []Pixmap, src []Pixmap)

// CmmTransformColorFn type as declared in fitz/color-management.h:43
type CmmTransformColorFn func(ctx []CmmInstance, link []Icclink, dst []uint16, src []uint16)

// CmmInitLinkFn type as declared in fitz/color-management.h:48
type CmmInitLinkFn func(ctx []CmmInstance, link []Icclink, dst []Iccprofile, dstExtras int32, src []Iccprofile, srcExtras int32, prf []Iccprofile, rend []ColorParams, cmmFlags int32, numBytes int32, copySpots int32)

// CmmFinLinkFn type as declared in fitz/color-management.h:53
type CmmFinLinkFn func(ctx []CmmInstance, link []Icclink)

// CmmInitProfileFn type as declared in fitz/color-management.h:59
type CmmInitProfileFn func(ctx []CmmInstance, profile []Iccprofile)

// CmmFinProfileFn type as declared in fitz/color-management.h:65
type CmmFinProfileFn func(ctx []CmmInstance, profile []Iccprofile)

// Device as declared in fitz/device.h:24
type Device struct {
	Refs                  int32
	Hints                 int32
	Flags                 int32
	CloseDevice           *func(arg0 []Context, arg1 []Device)
	DropDevice            *func(arg0 []Context, arg1 []Device)
	FillPath              *func(arg0 []Context, arg1 []Device, arg2 []Path, evenOdd int32, arg4 []Matrix, arg5 []Colorspace, color []float32, alpha float32, arg8 []ColorParams)
	StrokePath            *func(arg0 []Context, arg1 []Device, arg2 []Path, arg3 []StrokeState, arg4 []Matrix, arg5 []Colorspace, color []float32, alpha float32, arg8 []ColorParams)
	ClipPath              *func(arg0 []Context, arg1 []Device, arg2 []Path, evenOdd int32, arg4 []Matrix, scissor []Rect)
	ClipStrokePath        *func(arg0 []Context, arg1 []Device, arg2 []Path, arg3 []StrokeState, arg4 []Matrix, scissor []Rect)
	FillText              *func(arg0 []Context, arg1 []Device, arg2 []Text, arg3 []Matrix, arg4 []Colorspace, color []float32, alpha float32, arg7 []ColorParams)
	StrokeText            *func(arg0 []Context, arg1 []Device, arg2 []Text, arg3 []StrokeState, arg4 []Matrix, arg5 []Colorspace, color []float32, alpha float32, arg8 []ColorParams)
	ClipText              *func(arg0 []Context, arg1 []Device, arg2 []Text, arg3 []Matrix, scissor []Rect)
	ClipStrokeText        *func(arg0 []Context, arg1 []Device, arg2 []Text, arg3 []StrokeState, arg4 []Matrix, scissor []Rect)
	IgnoreText            *func(arg0 []Context, arg1 []Device, arg2 []Text, arg3 []Matrix)
	FillShade             *func(arg0 []Context, arg1 []Device, shd []Shade, ctm []Matrix, alpha float32, colorParams []ColorParams)
	FillImage             *func(arg0 []Context, arg1 []Device, img []Image, ctm []Matrix, alpha float32, colorParams []ColorParams)
	FillImageMask         *func(arg0 []Context, arg1 []Device, img []Image, ctm []Matrix, arg4 []Colorspace, color []float32, alpha float32, colorParams []ColorParams)
	ClipImageMask         *func(arg0 []Context, arg1 []Device, img []Image, ctm []Matrix, scissor []Rect)
	PopClip               *func(arg0 []Context, arg1 []Device)
	BeginMask             *func(arg0 []Context, arg1 []Device, arg2 []Rect, luminosity int32, arg4 []Colorspace, bc []float32, arg6 []ColorParams)
	EndMask               *func(arg0 []Context, arg1 []Device)
	BeginGroup            *func(arg0 []Context, arg1 []Device, arg2 []Rect, cs []Colorspace, isolated int32, knockout int32, blendmode int32, alpha float32)
	EndGroup              *func(arg0 []Context, arg1 []Device)
	BeginTile             *func(arg0 []Context, arg1 []Device, area []Rect, view []Rect, xstep float32, ystep float32, ctm []Matrix, id int32) int32
	EndTile               *func(arg0 []Context, arg1 []Device)
	RenderFlags           *func(arg0 []Context, arg1 []Device, set int32, clear int32)
	SetDefaultColorspaces *func(arg0 []Context, arg1 []Device, arg2 []DefaultColorspaces)
	D1Rect                Rect
	ErrorDepth            int32
	Errmess               [256]byte
	ContainerLen          int32
	ContainerCap          int32
	Container             []DeviceContainerStack
	ref9990efab           *C.fz_device
	allocs9990efab        interface{}
}

// DeviceContainerStack as declared in fitz/device.h:78
type DeviceContainerStack C.fz_device_container_stack

// Cookie as declared in fitz/device.h:202
type Cookie struct {
	Abort          int32
	Progress       int32
	ProgressMax    int32
	Errors         int32
	IncompleteOk   int32
	Incomplete     int32
	ref1a5fe343    *C.fz_cookie
	allocs1a5fe343 interface{}
}

// DrawOptions as declared in fitz/device.h:347
type DrawOptions struct {
	Rotate         int32
	XResolution    int32
	YResolution    int32
	Width          int32
	Height         int32
	Colorspace     []Colorspace
	Alpha          int32
	Graphics       int32
	Text           int32
	ref4717a0e8    *C.fz_draw_options
	allocs4717a0e8 interface{}
}

// DisplayList as declared in fitz/display-list.h:25
type DisplayList C.fz_display_list

// StextChar as declared in fitz/structured-text.h:19
type StextChar struct {
	C              int32
	Rtl            int32
	Origin         Point
	Bbox           Rect
	Size           float32
	Font           []Font
	Next           []StextChar
	reff4ae00e9    *C.fz_stext_char
	allocsf4ae00e9 interface{}
}

// StextLine as declared in fitz/structured-text.h:20
type StextLine struct {
	Wmode          int32
	Dir            Point
	Bbox           Rect
	FirstChar      []StextChar
	LastChar       []StextChar
	Prev           []StextLine
	Next           []StextLine
	refa944e380    *C.fz_stext_line
	allocsa944e380 interface{}
}

// StextBlock as declared in fitz/structured-text.h:21
type StextBlock struct {
	Type           int32
	Bbox           Rect
	Prev           []StextBlock
	Next           []StextBlock
	ref3a05137c    *C.fz_stext_block
	allocs3a05137c interface{}
}

// StextPage as declared in fitz/structured-text.h:22
type StextPage struct {
	Pool           []Pool
	Mediabox       Rect
	FirstBlock     []StextBlock
	LastBlock      []StextBlock
	ref6c5ae156    *C.fz_stext_page
	allocs6c5ae156 interface{}
}

// StextOptions as declared in fitz/structured-text.h:170
type StextOptions struct {
	Flags          int32
	ref1ed8747a    *C.fz_stext_options
	allocs1ed8747a interface{}
}

// Transition as declared in fitz/transition.h:8
type Transition struct {
	Type           int32
	Duration       float32
	Vertical       int32
	Outwards       int32
	Direction      int32
	State0         int32
	State1         int32
	ref90c6cc5a    *C.fz_transition
	allocs90c6cc5a interface{}
}

// Link as declared in fitz/link.h:12
type Link struct {
	Refs           int32
	Next           []Link
	Rect           Rect
	Doc            unsafe.Pointer
	Uri            []byte
	ref721896f1    *C.fz_link
	allocs721896f1 interface{}
}

// Outline as declared in fitz/outline.h:31
type Outline struct {
	Refs          int32
	Title         []byte
	Uri           []byte
	Page          int32
	X             float32
	Y             float32
	Next          []Outline
	Down          []Outline
	IsOpen        int32
	refceb39fb    *C.fz_outline
	allocsceb39fb interface{}
}

// Document as declared in fitz/document.h:16
type Document struct {
	Refs                 int32
	DropDocument         DocumentDropFn
	NeedsPassword        DocumentNeedsPasswordFn
	AuthenticatePassword DocumentAuthenticatePasswordFn
	HasPermission        DocumentHasPermissionFn
	LoadOutline          DocumentLoadOutlineFn
	Layout               DocumentLayoutFn
	MakeBookmark         DocumentMakeBookmarkFn
	LookupBookmark       DocumentLookupBookmarkFn
	ResolveLink          DocumentResolveLinkFn
	CountPages           DocumentCountPagesFn
	LoadPage             DocumentLoadPageFn
	LookupMetadata       DocumentLookupMetadataFn
	GetOutputIntent      DocumentOutputIntentFn
	DidLayout            int32
	IsReflowable         int32
	ref222d237e          *C.fz_document
	allocs222d237e       interface{}
}

// DocumentHandler as declared in fitz/document.h:17
type DocumentHandler struct {
	Recognize      DocumentRecognizeFn
	Open           DocumentOpenFn
	OpenWithStream DocumentOpenWithStreamFn
	Extensions     []string
	Mimetypes      []string
	refa0633e9f    *C.fz_document_handler
	allocsa0633e9f interface{}
}

// Page as declared in fitz/document.h:18
type Page struct {
	Refs               int32
	DropPage           PageDropPageFn
	BoundPage          PageBoundPageFn
	RunPageContents    PageRunPageContentsFn
	LoadLinks          PageLoadLinksFn
	FirstAnnot         PageFirstAnnotFn
	PagePresentation   PagePagePresentationFn
	ControlSeparation  PageControlSeparationFn
	SeparationDisabled PageSeparationDisabledFn
	Separations        PageSeparationsFn
	ref50beb920        *C.fz_page
	allocs50beb920     interface{}
}

// Annot as declared in fitz/document.h:19
type Annot struct {
	Refs           int32
	DropAnnot      AnnotDropFn
	BoundAnnot     AnnotBoundFn
	RunAnnot       AnnotRunFn
	NextAnnot      AnnotNextFn
	ref4e89b9b8    *C.fz_annot
	allocs4e89b9b8 interface{}
}

// Bookmark type as declared in fitz/document.h:20
type Bookmark int

// DocumentDropFn type as declared in fitz/document.h:38
type DocumentDropFn func(ctx []Context, doc []Document)

// DocumentNeedsPasswordFn type as declared in fitz/document.h:45
type DocumentNeedsPasswordFn func(ctx []Context, doc []Document) int32

// DocumentAuthenticatePasswordFn type as declared in fitz/document.h:52
type DocumentAuthenticatePasswordFn func(ctx []Context, doc []Document, password string) int32

// DocumentHasPermissionFn type as declared in fitz/document.h:59
type DocumentHasPermissionFn func(ctx []Context, doc []Document, permission Permission) int32

// DocumentLoadOutlineFn type as declared in fitz/document.h:66
type DocumentLoadOutlineFn func(ctx []Context, doc []Document) *Outline

// DocumentLayoutFn type as declared in fitz/document.h:72
type DocumentLayoutFn func(ctx []Context, doc []Document, w float32, h float32, em float32)

// DocumentResolveLinkFn type as declared in fitz/document.h:79
type DocumentResolveLinkFn func(ctx []Context, doc []Document, uri string, xp []float32, yp []float32) int32

// DocumentCountPagesFn type as declared in fitz/document.h:86
type DocumentCountPagesFn func(ctx []Context, doc []Document) int32

// DocumentLoadPageFn type as declared in fitz/document.h:92
type DocumentLoadPageFn func(ctx []Context, doc []Document, number int32) *Page

// DocumentLookupMetadataFn type as declared in fitz/document.h:99
type DocumentLookupMetadataFn func(ctx []Context, doc []Document, key string, buf []byte, size int32) int32

// DocumentOutputIntentFn type as declared in fitz/document.h:104
type DocumentOutputIntentFn func(ctx []Context, doc []Document) *Colorspace

// DocumentMakeBookmarkFn type as declared in fitz/document.h:110
type DocumentMakeBookmarkFn func(ctx []Context, doc []Document, page int32) Bookmark

// DocumentLookupBookmarkFn type as declared in fitz/document.h:116
type DocumentLookupBookmarkFn func(ctx []Context, doc []Document, mark Bookmark) int32

// PageDropPageFn type as declared in fitz/document.h:123
type PageDropPageFn func(ctx []Context, page []Page)

// PageBoundPageFn type as declared in fitz/document.h:130
type PageBoundPageFn func(ctx []Context, page []Page, arg2 []Rect) *Rect

// PageRunPageContentsFn type as declared in fitz/document.h:137
type PageRunPageContentsFn func(ctx []Context, page []Page, dev []Device, transform []Matrix, cookie []Cookie)

// PageLoadLinksFn type as declared in fitz/document.h:143
type PageLoadLinksFn func(ctx []Context, page []Page) *Link

// PageFirstAnnotFn type as declared in fitz/document.h:150
type PageFirstAnnotFn func(ctx []Context, page []Page) *Annot

// PagePagePresentationFn type as declared in fitz/document.h:158
type PagePagePresentationFn func(ctx []Context, page []Page, transition []Transition, duration []float32) *Transition

// PageControlSeparationFn type as declared in fitz/document.h:165
type PageControlSeparationFn func(ctx []Context, page []Page, separation int32, disable int32)

// PageSeparationDisabledFn type as declared in fitz/document.h:172
type PageSeparationDisabledFn func(ctx []Context, page []Page, separation int32) int32

// PageSeparationsFn type as declared in fitz/document.h:179
type PageSeparationsFn func(ctx []Context, page []Page) *Separations

// AnnotDropFn type as declared in fitz/document.h:181
type AnnotDropFn func(ctx []Context, annot []Annot)

// AnnotNextFn type as declared in fitz/document.h:182
type AnnotNextFn func(ctx []Context, annot []Annot) *Annot

// AnnotBoundFn type as declared in fitz/document.h:183
type AnnotBoundFn func(ctx []Context, annot []Annot, rect []Rect) *Rect

// AnnotRunFn type as declared in fitz/document.h:184
type AnnotRunFn func(ctx []Context, annot []Annot, dev []Device, transform []Matrix, cookie []Cookie)

// DocumentOpenFn type as declared in fitz/document.h:251
type DocumentOpenFn func(ctx []Context, filename string) *Document

// DocumentOpenWithStreamFn type as declared in fitz/document.h:262
type DocumentOpenWithStreamFn func(ctx []Context, stream []Stream) *Document

// DocumentRecognizeFn type as declared in fitz/document.h:275
type DocumentRecognizeFn func(ctx []Context, magic string) int32

// DocumentWriter as declared in fitz/writer.h:10
type DocumentWriter struct {
	BeginPage      DocumentWriterBeginPageFn
	EndPage        DocumentWriterEndPageFn
	CloseWriter    DocumentWriterCloseWriterFn
	DropWriter     DocumentWriterDropWriterFn
	Dev            []Device
	ref60966fef    *C.fz_document_writer
	allocs60966fef interface{}
}

// DocumentWriterBeginPageFn type as declared in fitz/writer.h:20
type DocumentWriterBeginPageFn func(ctx []Context, wri []DocumentWriter, mediabox []Rect) *Device

// DocumentWriterEndPageFn type as declared in fitz/writer.h:28
type DocumentWriterEndPageFn func(ctx []Context, wri []DocumentWriter, dev []Device)

// DocumentWriterCloseWriterFn type as declared in fitz/writer.h:37
type DocumentWriterCloseWriterFn func(ctx []Context, wri []DocumentWriter)

// DocumentWriterDropWriterFn type as declared in fitz/writer.h:48
type DocumentWriterDropWriterFn func(ctx []Context, wri []DocumentWriter)

// BandWriter as declared in fitz/band-writer.h:11
type BandWriter struct {
	Drop           DropBandWriterFn
	Header         WriteHeaderFn
	Band           WriteBandFn
	Trailer        WriteTrailerFn
	Out            []Output
	W              int32
	H              int32
	N              int32
	S              int32
	Alpha          int32
	Xres           int32
	Yres           int32
	Pagenum        int32
	Line           int32
	Seps           []Separations
	ref6e823638    *C.fz_band_writer
	allocs6e823638 interface{}
}

// WriteHeaderFn type as declared in fitz/band-writer.h:13
type WriteHeaderFn func(ctx []Context, writer []BandWriter, cs []Colorspace)

// WriteBandFn type as declared in fitz/band-writer.h:14
type WriteBandFn func(ctx []Context, writer []BandWriter, stride int32, bandStart int32, bandHeight int32, samples string)

// WriteTrailerFn type as declared in fitz/band-writer.h:15
type WriteTrailerFn func(ctx []Context, writer []BandWriter)

// DropBandWriterFn type as declared in fitz/band-writer.h:16
type DropBandWriterFn func(ctx []Context, writer []BandWriter)

// PwgOptions as declared in fitz/output-pwg.h:11
type PwgOptions struct {
	MediaClass      [64]byte
	MediaColor      [64]byte
	MediaType       [64]byte
	OutputType      [64]byte
	AdvanceDistance uint32
	AdvanceMedia    int32
	Collate         int32
	CutMedia        int32
	Duplex          int32
	InsertSheet     int32
	Jog             int32
	LeadingEdge     int32
	ManualFeed      int32
	MediaPosition   uint32
	MediaWeight     uint32
	MirrorPrint     int32
	NegativePrint   int32
	NumCopies       uint32
	Orientation     int32
	OutputFaceUp    int32
	Pagesize        [2]uint32
	Separations     int32
	TraySwitch      int32
	Tumble          int32
	MediaTypeNum    int32
	Compression     int32
	RowCount        uint32
	RowFeed         uint32
	RowStep         uint32
	RenderingIntent [64]byte
	PageSizeName    [64]byte
	ref780a866b     *C.fz_pwg_options
	allocs780a866b  interface{}
}

// PclOptions as declared in fitz/output-pcl.h:14
type PclOptions struct {
	Features         int32
	OddPageInit      string
	EvenPageInit     string
	Tumble           int32
	DuplexSet        int32
	Duplex           int32
	PaperSize        int32
	ManualFeedSet    int32
	ManualFeed       int32
	MediaPositionSet int32
	MediaPosition    int32
	Orientation      int32
	PageCount        int32
	refd41a3924      *C.fz_pcl_options
	allocsd41a3924   interface{}
}

// Document as declared in pdf/object.h:4
type Document struct {
	Super                  Document
	File                   []Stream
	Version                int32
	Startxref              Off
	FileSize               Off
	Crypt                  []Crypt
	Ocg                    []OcgDescriptor
	Portfolio              []Portfolio
	Hotspot                Hotspot
	Oi                     []Colorspace
	MaxXrefLen             int32
	NumXrefSections        int32
	SavedNumXrefSections   int32
	NumIncrementalSections int32
	XrefBase               int32
	DisallowNewIncrements  int32
	XrefSections           []Xref
	SavedXrefSections      []Xref
	XrefIndex              []int32
	FreezeUpdates          int32
	HasXrefStreams         int32
	PageCount              int32
	RevPageMap             []RevPageMap
	RepairAttempted        int32
	FileReadingLinearly    int32
	FileLength             Off
	LinearObj              []Obj
	LinearPageRefs         [][]Obj
	LinearPage1ObjNum      int32
	LinearPos              Off
	LinearPageNum          int32
	HintObjectOffset       int32
	HintObjectLength       int32
	HintsLoaded            int32
	HintSharedRef          []int32
	HintObjOffsetsMax      int32
	HintObjOffsets         []Off
	ResourcesLocalised     int32
	Lexbuf                 LexbufLarge
	Focus                  []Annot
	FocusObj               []Obj
	Js                     []Js
	Recalculating          int32
	Dirty                  int32
	UpdateAppearance       *func(ctx []Context, doc []Document, annot []Annot)
	EventCb                DocEventCb
	EventCbData            unsafe.Pointer
	NumType3Fonts          int32
	MaxType3Fonts          int32
	Type3Fonts             [][]Font
	OrphansMax             int32
	OrphansCount           int32
	Orphans                [][]Obj
	ref73cb0dae            *C.pdf_document
	allocs73cb0dae         interface{}
}

// Obj as declared in pdf/object.h:12
type Obj C.pdf_obj

// Lexbuf as declared in pdf/document.h:4
type Lexbuf struct {
	Size           int32
	BaseSize       int32
	Len            int32
	I              Off
	F              float32
	Scratch        []byte
	Buffer         [256]byte
	refeaf0e4db    *C.pdf_lexbuf
	allocseaf0e4db interface{}
}

// LexbufLarge as declared in pdf/document.h:5
type LexbufLarge struct {
	Base           Lexbuf
	Buffer         [65280]byte
	ref54ed0b00    *C.pdf_lexbuf_large
	allocs54ed0b00 interface{}
}

// Xref as declared in pdf/document.h:6
type Xref struct {
	NumObjects       int32
	Subsec           []XrefSubsec
	Trailer          []Obj
	PreRepairTrailer []Obj
	UnsavedSigs      []UnsavedSig
	UnsavedSigsEnd   [][]UnsavedSig
	EndOfs           Off
	ref97c0fd90      *C.pdf_xref
	allocs97c0fd90   interface{}
}

// Crypt as declared in pdf/document.h:7
type Crypt C.pdf_crypt

// OcgDescriptor as declared in pdf/document.h:8
type OcgDescriptor C.pdf_ocg_descriptor

// Portfolio as declared in pdf/document.h:9
type Portfolio C.pdf_portfolio

// Page as declared in pdf/document.h:11
type Page struct {
	Super          Page
	Doc            []Document
	Obj            []Obj
	Transparency   int32
	Incomplete     int32
	Links          []Link
	Annots         []Annot
	AnnotTailp     [][]Annot
	refe72bfb6e    *C.pdf_page
	allocse72bfb6e interface{}
}

// Annot as declared in pdf/document.h:12
type Annot struct {
	Super          Annot
	Page           []Page
	Obj            []Obj
	Ap             []Xobject
	ApIteration    int32
	Changed        int32
	Next           []Annot
	refdf5a406d    *C.pdf_annot
	allocsdf5a406d interface{}
}

// Widget as declared in pdf/document.h:13
type Widget C.pdf_widget

// Hotspot as declared in pdf/document.h:14
type Hotspot struct {
	Num            int32
	State          int32
	ref3b09023c    *C.pdf_hotspot
	allocs3b09023c interface{}
}

// Js as declared in pdf/document.h:15
type Js C.pdf_js

// DocEvent as declared in pdf/document.h:50
type DocEvent struct {
	Type           int32
	refdce49f90    *C.pdf_doc_event
	allocsdce49f90 interface{}
}

// DocEventCb type as declared in pdf/document.h:56
type DocEventCb func(ctx []Context, doc []Document, event []DocEvent, data unsafe.Pointer)

// LayerConfig as declared in pdf/document.h:150
type LayerConfig struct {
	Name           string
	Creator        string
	ref5f707db3    *C.pdf_layer_config
	allocs5f707db3 interface{}
}

// LayerConfigUi as declared in pdf/document.h:240
type LayerConfigUi struct {
	Text           string
	Depth          int32
	Type           LayerConfigUiType
	Selected       int32
	Locked         int32
	reff30bd241    *C.pdf_layer_config_ui
	allocsf30bd241 interface{}
}

// PortfolioSchema as declared in pdf/document.h:305
type PortfolioSchema struct {
	Type           PortfolioSchemaType
	Visible        int32
	Editable       int32
	Name           []Obj
	ref750f0bd0    *C.pdf_portfolio_schema
	allocs750f0bd0 interface{}
}

// Signer as declared in pdf/document.h:539
type Signer C.pdf_signer

// UnsavedSig as declared in pdf/document.h:542
type UnsavedSig struct {
	Field          []Obj
	ByteRangeStart int32
	ByteRangeEnd   int32
	ContentsStart  int32
	ContentsEnd    int32
	Signer         []Signer
	Next           []UnsavedSig
	ref2830cb5d    *C.pdf_unsaved_sig
	allocs2830cb5d interface{}
}

// RevPageMap as declared in pdf/document.h:555
type RevPageMap struct {
	Page           int32
	Object         int32
	ref2404dd3d    *C.pdf_rev_page_map
	allocs2404dd3d interface{}
}

// GraftMap as declared in pdf/document.h:682
type GraftMap C.pdf_graft_map

// WriteOptions as declared in pdf/document.h:828
type WriteOptions struct {
	DoIncremental    int32
	DoPretty         int32
	DoAscii          int32
	DoCompress       int32
	DoCompressImages int32
	DoCompressFonts  int32
	DoDecompress     int32
	DoGarbage        int32
	DoLinear         int32
	DoClean          int32
	ContinueOnError  int32
	Errors           []int32
	ref5d16f824      *C.pdf_write_options
	allocs5d16f824   interface{}
}

// XrefEntry as declared in pdf/xref.h:36
type XrefEntry struct {
	Type           byte
	Flags          byte
	Gen            uint16
	Num            int32
	Ofs            Off
	StmOfs         Off
	StmBuf         []Buffer
	Obj            []Obj
	ref82cab330    *C.pdf_xref_entry
	allocs82cab330 interface{}
}

// XrefSubsec as declared in pdf/xref.h:55
type XrefSubsec struct {
	Next           []XrefSubsec
	Len            int32
	Start          Off
	Table          []XrefEntry
	ref709a5d4c    *C.pdf_xref_subsec
	allocs709a5d4c interface{}
}

// DesignatedName as declared in pdf/crypt.h:32
type DesignatedName struct {
	Cn             []byte
	O              []byte
	Ou             []byte
	Email          []byte
	C              []byte
	reff432d5bb    *C.pdf_designated_name
	allocsf432d5bb interface{}
}

// PageContentsProcessFn type as declared in pdf/page.h:115
type PageContentsProcessFn func(ctx []Context, buffer []Buffer, res []Obj, arg unsafe.Pointer)

// Function as declared in pdf/resource.h:30
type Function C.pdf_function

// Pattern as declared in pdf/resource.h:55
type Pattern struct {
	Storable       Storable
	Ismask         int32
	Xstep          float32
	Ystep          float32
	Matrix         Matrix
	Bbox           Rect
	Document       []Document
	Resources      []Obj
	Contents       []Obj
	Id             int32
	refd0067da1    *C.pdf_pattern
	allocsd0067da1 interface{}
}

// Xobject as declared in pdf/resource.h:79
type Xobject struct {
	Storable       Storable
	Obj            []Obj
	Iteration      int32
	ref283eca52    *C.pdf_xobject
	allocs283eca52 interface{}
}

// Cmap as declared in pdf/cmap.h:8
type Cmap struct {
	Storable       Storable
	CmapName       [32]byte
	UsecmapName    [32]byte
	Usecmap        []Cmap
	Wmode          int32
	CodespaceLen   int32
	Rlen           int32
	Rcap           int32
	Ranges         []Range
	Xlen           int32
	Xcap           int32
	Xranges        []Xrange
	Mlen           int32
	Mcap           int32
	Mranges        []Mrange
	Dlen           int32
	Dcap           int32
	Dict           []int32
	Tlen           int32
	Tcap           int32
	Ttop           int32
	ref971ab916    *C.pdf_cmap
	allocs971ab916 interface{}
}

// Range as declared in pdf/cmap.h:9
type Range struct {
	Low           uint16
	High          uint16
	Out           uint16
	ref2101793    *C.pdf_range
	allocs2101793 interface{}
}

// Xrange as declared in pdf/cmap.h:10
type Xrange struct {
	Low            uint32
	High           uint32
	Out            uint32
	ref65812fdc    *C.pdf_xrange
	allocs65812fdc interface{}
}

// Mrange as declared in pdf/cmap.h:11
type Mrange struct {
	Low            uint32
	Out            uint32
	ref369abcf4    *C.pdf_mrange
	allocs369abcf4 interface{}
}

// FontDesc as declared in pdf/font.h:31
type FontDesc struct {
	Storable       Storable
	Size           uint
	Font           []Font
	Flags          int32
	ItalicAngle    float32
	Ascent         float32
	Descent        float32
	CapHeight      float32
	XHeight        float32
	MissingWidth   float32
	Encoding       []Cmap
	ToTtfCmap      []Cmap
	CidToGidLen    uint
	CidToGid       []uint16
	ToUnicode      []Cmap
	CidToUcsLen    uint
	CidToUcs       []uint16
	Wmode          int32
	HmtxLen        int32
	HmtxCap        int32
	Dhmtx          Hmtx
	Hmtx           []Hmtx
	VmtxLen        int32
	VmtxCap        int32
	Dvmtx          Vmtx
	Vmtx           []Vmtx
	IsEmbedded     int32
	ref9390f5cb    *C.pdf_font_desc
	allocs9390f5cb interface{}
}

// Hmtx as declared in pdf/font.h:32
type Hmtx struct {
	Lo             uint16
	Hi             uint16
	W              int32
	ref79755031    *C.pdf_hmtx
	allocs79755031 interface{}
}

// Vmtx as declared in pdf/font.h:33
type Vmtx struct {
	Lo             uint16
	Hi             uint16
	X              int16
	Y              int16
	W              int16
	refc9b3709d    *C.pdf_vmtx
	allocsc9b3709d interface{}
}

// Csi as declared in pdf/interpret.h:4
type Csi struct {
	Doc            []Document
	Rdb            []Obj
	Buf            []Lexbuf
	Cookie         []Cookie
	Gstate         int32
	Xbalance       int32
	InText         int32
	D1Rect         Rect
	Obj            []Obj
	Name           [256]byte
	String         [256]byte
	StringLen      int32
	Top            int32
	Stack          [32]float32
	ref1d9059b0    *C.pdf_csi
	allocs1d9059b0 interface{}
}

// Gstate as declared in pdf/interpret.h:5
type Gstate C.pdf_gstate

// Processor as declared in pdf/interpret.h:6
type Processor struct {
	CloseProcessor     *func(ctx []Context, proc []Processor)
	DropProcessor      *func(ctx []Context, proc []Processor)
	OpW                *func(ctx []Context, proc []Processor, linewidth float32)
	OpJ                *func(ctx []Context, proc []Processor, linejoin int32)
	OpJ                *func(ctx []Context, proc []Processor, linecap int32)
	OpM                *func(ctx []Context, proc []Processor, miterlimit float32)
	OpD                *func(ctx []Context, proc []Processor, array []Obj, phase float32)
	OpRi               *func(ctx []Context, proc []Processor, intent string)
	OpI                *func(ctx []Context, proc []Processor, flatness float32)
	OpGsBegin          *func(ctx []Context, proc []Processor, name string, extgstate []Obj)
	OpGsBm             *func(ctx []Context, proc []Processor, blendmode string)
	OpGsCa             *func(ctx []Context, proc []Processor, alpha float32)
	OpGsCa             *func(ctx []Context, proc []Processor, alpha float32)
	OpGsSmask          *func(ctx []Context, proc []Processor, smask []Xobject, pageResources []Obj, bc []float32, luminosity int32)
	OpGsEnd            *func(ctx []Context, proc []Processor)
	OpQ                *func(ctx []Context, proc []Processor)
	OpQ                *func(ctx []Context, proc []Processor)
	OpCm               *func(ctx []Context, proc []Processor, a float32, b float32, c float32, d float32, e float32, f float32)
	OpM                *func(ctx []Context, proc []Processor, x float32, y float32)
	OpL                *func(ctx []Context, proc []Processor, x float32, y float32)
	OpC                *func(ctx []Context, proc []Processor, x1 float32, y1 float32, x2 float32, y2 float32, x3 float32, y3 float32)
	OpV                *func(ctx []Context, proc []Processor, x2 float32, y2 float32, x3 float32, y3 float32)
	OpY                *func(ctx []Context, proc []Processor, x1 float32, y1 float32, x3 float32, y3 float32)
	OpH                *func(ctx []Context, proc []Processor)
	OpRe               *func(ctx []Context, proc []Processor, x float32, y float32, w float32, h float32)
	OpS                *func(ctx []Context, proc []Processor)
	OpS                *func(ctx []Context, proc []Processor)
	OpF                *func(ctx []Context, proc []Processor)
	OpF                *func(ctx []Context, proc []Processor)
	OpFstar            *func(ctx []Context, proc []Processor)
	OpB                *func(ctx []Context, proc []Processor)
	OpBstar            *func(ctx []Context, proc []Processor)
	OpB                *func(ctx []Context, proc []Processor)
	OpBstar            *func(ctx []Context, proc []Processor)
	OpN                *func(ctx []Context, proc []Processor)
	OpW                *func(ctx []Context, proc []Processor)
	OpWstar            *func(ctx []Context, proc []Processor)
	OpBt               *func(ctx []Context, proc []Processor)
	OpEt               *func(ctx []Context, proc []Processor)
	OpTc               *func(ctx []Context, proc []Processor, charspace float32)
	OpTw               *func(ctx []Context, proc []Processor, wordspace float32)
	OpTz               *func(ctx []Context, proc []Processor, scale float32)
	OpTl               *func(ctx []Context, proc []Processor, leading float32)
	OpTf               *func(ctx []Context, proc []Processor, name string, font []FontDesc, size float32)
	OpTr               *func(ctx []Context, proc []Processor, render int32)
	OpTs               *func(ctx []Context, proc []Processor, rise float32)
	OpTd               *func(ctx []Context, proc []Processor, tx float32, ty float32)
	OpTd               *func(ctx []Context, proc []Processor, tx float32, ty float32)
	OpTm               *func(ctx []Context, proc []Processor, a float32, b float32, c float32, d float32, e float32, f float32)
	OpTstar            *func(ctx []Context, proc []Processor)
	OpTj               *func(ctx []Context, proc []Processor, array []Obj)
	OpTj               *func(ctx []Context, proc []Processor, str []byte, len int32)
	OpSquote           *func(ctx []Context, proc []Processor, str []byte, len int32)
	OpDquote           *func(ctx []Context, proc []Processor, aw float32, ac float32, str []byte, len int32)
	OpD0               *func(ctx []Context, proc []Processor, wx float32, wy float32)
	OpD1               *func(ctx []Context, proc []Processor, wx float32, wy float32, llx float32, lly float32, urx float32, ury float32)
	OpCs               *func(ctx []Context, proc []Processor, name string, cs []Colorspace)
	OpCs               *func(ctx []Context, proc []Processor, name string, cs []Colorspace)
	OpScPattern        *func(ctx []Context, proc []Processor, name string, pat []Pattern, n int32, color []float32)
	OpScPattern        *func(ctx []Context, proc []Processor, name string, pat []Pattern, n int32, color []float32)
	OpScShade          *func(ctx []Context, proc []Processor, name string, shade []Shade)
	OpScShade          *func(ctx []Context, proc []Processor, name string, shade []Shade)
	OpScColor          *func(ctx []Context, proc []Processor, n int32, color []float32)
	OpScColor          *func(ctx []Context, proc []Processor, n int32, color []float32)
	OpG                *func(ctx []Context, proc []Processor, g float32)
	OpG                *func(ctx []Context, proc []Processor, g float32)
	OpRg               *func(ctx []Context, proc []Processor, r float32, g float32, b float32)
	OpRg               *func(ctx []Context, proc []Processor, r float32, g float32, b float32)
	OpK                *func(ctx []Context, proc []Processor, c float32, m float32, y float32, k float32)
	OpK                *func(ctx []Context, proc []Processor, c float32, m float32, y float32, k float32)
	OpBi               *func(ctx []Context, proc []Processor, image []Image)
	OpSh               *func(ctx []Context, proc []Processor, name string, shade []Shade)
	OpDoImage          *func(ctx []Context, proc []Processor, name string, image []Image)
	OpDoForm           *func(ctx []Context, proc []Processor, name string, form []Xobject, pageResources []Obj)
	OpMp               *func(ctx []Context, proc []Processor, tag string)
	OpDp               *func(ctx []Context, proc []Processor, tag string, raw []Obj, cooked []Obj)
	OpBmc              *func(ctx []Context, proc []Processor, tag string)
	OpBdc              *func(ctx []Context, proc []Processor, tag string, raw []Obj, cooked []Obj)
	OpEmc              *func(ctx []Context, proc []Processor)
	OpBx               *func(ctx []Context, proc []Processor)
	OpEx               *func(ctx []Context, proc []Processor)
	OpGsOp             *func(ctx []Context, proc []Processor, b int32)
	OpGsOp             *func(ctx []Context, proc []Processor, b int32)
	OpGsOpm            *func(ctx []Context, proc []Processor, i int32)
	OpGsUseblackptcomp *func(ctx []Context, proc []Processor, name []Obj)
	OpEnd              *func(ctx []Context, proc []Processor)
	Usage              string
	Hidden             int32
	refa163be31        *C.pdf_processor
	allocsa163be31     interface{}
}

// DaInfo as declared in pdf/appearance.h:10
type DaInfo struct {
	FontName      []byte
	FontSize      int32
	Col           [4]float32
	ColSize       int32
	ref2095c09    *C.pdf_da_info
	allocs2095c09 interface{}
}

// UiEvent as declared in pdf/event.h:37
type UiEvent struct {
	Etype          int32
	ref344a89eb    *C.pdf_ui_event
	allocs344a89eb interface{}
}

// AlertEvent as declared in pdf/event.h:108
type AlertEvent struct {
	Message          string
	IconType         int32
	ButtonGroupType  int32
	Title            string
	CheckBoxMessage  string
	InitiallyChecked int32
	FinallyChecked   int32
	ButtonPressed    int32
	ref1e745527      *C.pdf_alert_event
	allocs1e745527   interface{}
}

// SubmitEvent as declared in pdf/event.h:163
type SubmitEvent struct {
	Url            []byte
	Data           []byte
	DataLen        int32
	Get            int32
	refd232e92c    *C.pdf_submit_event
	allocsd232e92c interface{}
}

// LaunchUrlEvent as declared in pdf/event.h:180
type LaunchUrlEvent struct {
	Url            string
	NewFrame       int32
	ref3d69425e    *C.pdf_launch_url_event
	allocs3d69425e interface{}
}

// MailDocEvent as declared in pdf/event.h:202
type MailDocEvent struct {
	AskUser        int32
	To             string
	Cc             string
	Bcc            string
	Subject        string
	Message        string
	refe379e85d    *C.pdf_mail_doc_event
	allocse379e85d interface{}
}

// JsEvent as declared in pdf/javascript.h:9
type JsEvent struct {
	Target         []Obj
	Value          []byte
	Rc             int32
	ref527f69ec    *C.pdf_js_event
	allocs527f69ec interface{}
}
